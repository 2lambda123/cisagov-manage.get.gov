# Generated by Django 4.1.3 on 2022-11-07 19:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    dependencies = [
        ("registrar", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.TextField(help_text="First name", null=True)),
                ("middle_name", models.TextField(help_text="Middle name", null=True)),
                ("last_name", models.TextField(help_text="Last name", null=True)),
                ("title", models.TextField(help_text="Title", null=True)),
                ("email", models.TextField(help_text="Email", null=True)),
                ("phone", models.TextField(help_text="Phone", null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Website",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("website", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="DomainApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    django_fsm.FSMField(
                        choices=[
                            ("started", "started"),
                            ("submitted", "submitted"),
                            ("investigating", "investigating"),
                            ("approved", "approved"),
                        ],
                        default="started",
                        max_length=50,
                        protected=True,
                    ),
                ),
                (
                    "organization_type",
                    models.CharField(
                        choices=[
                            ("federal", "a federal agency"),
                            ("interstate", "an organization of two or more states"),
                            (
                                "state_or_territory",
                                "one of the 50 U.S. states, the District of Columbia, American Samoa, Guam, Northern Mariana Islands, Puerto Rico, or the U.S. Virgin Islands",
                            ),
                            (
                                "tribal",
                                "a tribal government recognized by the federal or state government",
                            ),
                            ("county", "a county, parish, or borough"),
                            ("city", "a city, town, township, village, etc."),
                            (
                                "special_district",
                                "an independent organization within a single state",
                            ),
                        ],
                        help_text="Type of Organization",
                        max_length=255,
                    ),
                ),
                (
                    "federal_branch",
                    models.CharField(
                        choices=[
                            ("Executive", "Executive"),
                            ("Judicial", "Judicial"),
                            ("Legislative", "Legislative"),
                        ],
                        help_text="Branch of federal government",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "is_election_office",
                    models.BooleanField(
                        help_text="Is your ogranization an election office?", null=True
                    ),
                ),
                (
                    "organization_name",
                    models.TextField(help_text="Organization name", null=True),
                ),
                (
                    "street_address",
                    models.TextField(help_text="Street Address", null=True),
                ),
                (
                    "unit_type",
                    models.CharField(help_text="Unit type", max_length=15, null=True),
                ),
                (
                    "unit_number",
                    models.CharField(
                        help_text="Unit number", max_length=255, null=True
                    ),
                ),
                (
                    "state_territory",
                    models.CharField(
                        help_text="State/Territory", max_length=2, null=True
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(help_text="ZIP code", max_length=10, null=True),
                ),
                (
                    "purpose",
                    models.TextField(help_text="Purpose of the domain", null=True),
                ),
                (
                    "security_email",
                    models.CharField(
                        help_text="Security email for public use",
                        max_length=320,
                        null=True,
                    ),
                ),
                (
                    "anything_else",
                    models.TextField(
                        help_text="Anything else we should know?", null=True
                    ),
                ),
                (
                    "acknowledged_policy",
                    models.BooleanField(
                        help_text="Acknowledged .gov acceptable use policy", null=True
                    ),
                ),
                (
                    "alternative_domains",
                    models.ManyToManyField(
                        related_name="alternatives+", to="registrar.website"
                    ),
                ),
                (
                    "authorizing_official",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="authorizing_official",
                        to="registrar.contact",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="applications_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "current_websites",
                    models.ManyToManyField(
                        related_name="current+", to="registrar.website"
                    ),
                ),
                (
                    "investigator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="applications_investigating",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "other_contacts",
                    models.ManyToManyField(
                        related_name="contact_applications", to="registrar.contact"
                    ),
                ),
                (
                    "requested_domain",
                    models.ForeignKey(
                        help_text="The requested domain",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="requested+",
                        to="registrar.website",
                    ),
                ),
                (
                    "submitter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="submitted_applications",
                        to="registrar.contact",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
