# This workflow runs on pushes when a pull request is opened under certain branch conventions.

name: Build and deploy developer sandbox
run-name: Build and deploy developer sandbox for branch ${{ github.head_ref }}

on:
  pull_request:

jobs:
  variables: 
    if: | 
      startsWith(github.head_ref, 'ik/')
        || startsWith(github.head_ref, 'jon')
        || startsWith(github.head_ref, 'sspj/')
        || startsWith(github.head_ref, 'mr/')
        || startsWith(github.head_ref, 'nmb/')
        || startsWith(github.head_ref, 'ab/')
        || startsWith(github.head_ref, 'bl/')
        || startsWith(github.head_ref, 'rjm/')
        || startsWith(github.head_ref, 'rb/')
        || startsWith(github.head_ref, 'ko/')
    outputs:
      environment: ${{ steps.var.outputs.environment}}
    runs-on: "ubuntu-latest"
    steps:
      - name: Setting global variables
        uses: actions/github-script@v6
        id: var
        with:
          script: |
            core.setOutput('environment', '${{ github.head_ref }}'.split("/")[0]);
  deploy:
    runs-on: ubuntu-latest
    needs: [variables]
    steps:
      - uses: actions/checkout@v3
      - name: Compile USWDS assets
        working-directory: ./src
        run: |
          docker compose run node npm install && 
          docker compose run node npx gulp copyAssets &&
          docker compose run node npx gulp compile 
      - name: Collect static assets 
        working-directory: ./src
        run: docker compose run app python manage.py collectstatic --no-input
      - name: Deploy to cloud.gov sandbox
        uses: 18f/cg-deploy-action@main
        env:
          DEPLOY_NOW: thanks
          ENVIRONMENT: ${{ needs.variables.outputs.environment }}
          CF_USERNAME: CF_${{ needs.variables.outputs.environment }}_USERNAME
          CF_PASSWORD: CF_${{ needs.variables.outputs.environment }}_PASSWORD
        with:
          cf_username: ${{ secrets[env.CF_USERNAME] }}
          cf_password: ${{ secrets[env.CF_PASSWORD] }}
          cf_org: cisa-getgov-prototyping
          cf_space: ${{ env.ENVIRONMENT }}
          push_arguments: "-f ops/manifests/manifest-${{ env.ENVIRONMENT }}.yaml"
  comment:
    runs-on: ubuntu-latest
    needs: [variables, deploy]
    steps:
      - uses: actions/github-script@v6
        env:
          ENVIRONMENT: ${{ needs.variables.outputs.environment }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ¥³ Successfully deployed to developer sandbox **[${{ env.ENVIRONMENT }}](https://getgov-${{ env.ENVIRONMENT }}.app.cloud.gov/)**.'
            })
