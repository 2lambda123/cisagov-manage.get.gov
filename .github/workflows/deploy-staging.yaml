# This workflow runs on pushes of tagged commits.
# "Releases" of tagged commits will deploy selected branch to staging.

name: Build and deploy staging for tagged release

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.gitignore'

    tags:
      - staging-*

jobs:
  deploy-staging:
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Compile USWDS assets
        working-directory: ./src
        run: |
          docker compose run node bash -c "\
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash && \
            export NVM_DIR=\"\$HOME/.nvm\" && \
            [ -s \"\$NVM_DIR/nvm.sh\" ] && \. \"\$NVM_DIR/nvm.sh\" && \
            [ -s \"\$NVM_DIR/bash_completion\" ] && \. \"\$NVM_DIR/bash_completion\" && \
            nvm install 21.7.3 && \
            nvm use 21.7.3 && \
            npm install && \
            npx gulp copyAssets && \
            npx gulp compile"
      - name: Collect static assets 
        working-directory: ./src
        run: docker compose run app python manage.py collectstatic --no-input
      - name: Deploy to cloud.gov sandbox
        uses: cloud-gov/cg-cli-tools@main
        with:
          cf_username: ${{ secrets.CF_STAGING_USERNAME }}
          cf_password: ${{ secrets.CF_STAGING_PASSWORD }}
          cf_org: cisa-dotgov
          cf_space: staging
          cf_manifest: "ops/manifests/manifest-staging.yaml"
      - name: Run Django migrations
        uses: cloud-gov/cg-cli-tools@main
        with:
          cf_username: ${{ secrets.CF_STAGING_USERNAME }}
          cf_password: ${{ secrets.CF_STAGING_PASSWORD }}
          cf_org: cisa-dotgov
          cf_space: staging
          cf_command: "run-task getgov-staging --command 'python manage.py migrate' --name migrate"
