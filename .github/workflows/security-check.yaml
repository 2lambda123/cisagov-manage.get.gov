name: Security checks

on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-check:
    name: Django security check
    runs-on: ubuntu-latest
    env:
      # fail the Django security check even on warnings
      FAIL_LEVEL: WARNING
      ENV_TYPE: pipenv
      DEP_PATH: src/
      APP_PATH: src/
      EXTRA_ARGS: "--settings=registrar.config.settings"
      DJANGO_SECRET_KEY: not-a-secret-jw7kQcb35fcDRIKp7K4fqZBmVvb+Sy4nkAGf44DxHi6EJl
      DATABASE_URL: "postgres://not_a_user:not_a_password@not_a_host"
      DJANGO_BASE_URL: "https://not_a_host"

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Scan Django settings for security issues
        id: check
        uses: ./.github/actions/django-security-check
      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: security-check-output
          path: ./src/output.txt

  backdoor-check:
    name: Ensure custom mods are contained
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: MockUserLogin should not be in settings.MIDDLEWARE
        run: "! grep -rwn * --exclude-dir=node_modules -e registrar.tests.common.MockUserLogin"
        working-directory: ./src

  owasp-scan:
    name: OWASP security scan
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Disable Login
        # by adding MockUserLogin to settings.MIDDLEWARE
        run: |
          perl -pi \
          -e 's/"csp.middleware.CSPMiddleware",/$&"registrar.tests.common.MockUserLogin",/' \
          registrar/config/settings.py
        working-directory: ./src

      - name: OWASP scan
        run: docker compose run owasp
        working-directory: ./src
